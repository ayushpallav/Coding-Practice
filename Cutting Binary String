#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
int min(int a,int b)
{
    if(a<b)
        return a;
    return b;
}
bool isPower(ll num)
{
    while(num>1)
    {
        if(num%5!=0)
            return 0;
        num /= 5;
    }
    return 1;
}
int Cuts(string bin)
{
    int n = bin.size();
    int dp[n];
    if(bin[n-1]-'0'==0)
        return -1;
    else
        dp[n-1] = 1;
    ll temp = 0;
    for(int i=n-2;i>=0;i--)
    {
        temp = 0;
        dp[i] = INT_MAX;
        if(bin[i]-'0'==0)
        {
            dp[i] = -1;
            continue;
        }
        for(int j=i;j<n;j++)
        {
            temp = temp*2 + (bin[j]-'0');
            if(isPower(temp))
            {
                if(j==n-1)
                    dp[i] = 1;
                else if(dp[j+1]!=-1)
                    dp[i] = min(dp[i],dp[j+1]+1);
            }
        }
        if(dp[i]==INT_MAX)
        {
            if(dp[i+1]!=-1)
                dp[i] = dp[i+1]+1;
            else
                dp[i] = -1;
        }
    }
    /*for(int i=0;i<n;i++)
        cout<<dp[i]<<" ";
    cout<<endl;*/
    return dp[0];
}
int main()
{
    string bin;
    int t,n;
    cin>>t;
    while(t--)
    {
        cin>>bin;
        cout<<Cuts(bin)<<endl;
    }
    return 0;
}
